<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="root" type="rootType" />
  <xs:complexType name="rootType">
    <xs:annotation>
      <xs:documentation>
        The document itself is made up of at least one collection instance.
        Multiple collection instances may be used if there are multiple sensors
        or sensor systems in the building. The language_version string can be
        used for specifying the version of the language that the document is
        written in. The language_version string should be used for
        compatibility with parsers and generators. The document_version string
        can be used for specifying the version of the document. If the
        document_version string changes, the user agent should update the user
        or take other aditional action.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="language_version" type="xs:string" minOccurs="0" />
      <xs:element name="document_version" type="xs:string" minOccurs="0" />
      <xs:element name="services" type="serviceType" maxOccurs="unbounded" minOccurs="0"/>
      <xs:element name="collection_instance" type="collectionInstanceType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="serviceType">
      <xs:all>
          <xs:element name="name" type="xs:string" minOccurs="0" />
          <xs:element name="id" type="xs:string" minOccurs="0" />
          <xs:element name="uri" type="xs:anyURI" minOccurs="0" />
          <xs:element name="description" type="xs:string" minOccurs="0" />
      </xs:all>
  </xs:complexType>

  <xs:complexType name="collectionInstanceType">
    <xs:all>
      <xs:element name="info" type="informationType" minOccurs="0" />
      <xs:element name="context" type="contextType" minOccurs="0" />
      <xs:element name="datatypes" type="datatypeTypes" minOccurs="0" />
      <xs:element name="purpose" type="purposeType" minOccurs="0" />
      <xs:element name="retention" type="retentionType" minOccurs="0" />
      <xs:element name="shared_with" type="sharedWithType" minOccurs="0" />
      <xs:element name="control_options" type="controlOptionsType" minOccurs="0" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="contextType">
    <xs:all>
      <xs:element name="location" type="locationType" minOccurs="0" />
      <xs:element name="operator" type="informationType" minOccurs="0" />
      <xs:element name="collector" type="collectorType" minOccurs="0" />
      <xs:element name="time" type="timeTypes" minOccurs="0" />
      <xs:element name="granularity" type="granularityType" minOccurs="0" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="locationType">
    <xs:annotation>
      <xs:documentation>
        What location is this sensor at? In other words, The type of location
        that broadly describes the location of the sensor in question. The
        location information can hold a unique ID that could be used to
        identify the location to external systems. For example, a room naming
        system may use this field for a room ID. The location owner describes
        who owns the location (e.g., company, government or privately owned).
      </xs:documentation>
    </xs:annotation>

    <xs:all>
      <xs:element name="location_information" type="informationType" />
      <xs:element name="location_owner" type="informationType" minOccurs="0" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="informationType">
    <xs:all>
      <xs:element name="name" type="xs:string" />
      <xs:element name="human_description" type="describedType" minOccurs="0" />
      <xs:element name="id" type="xs:string" minOccurs="0" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="describedType">
    <xs:all>
      <xs:element name="description" type="xs:string" minOccurs="0" />
      <xs:element name="more_info" type="xs:anyURI" minOccurs="0" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="timeTypes">
    <xs:annotation>
      <xs:documentation>
        This section describes the times during which the collector is actively
        collecting data. Multiple time segments can be used to create the union
        of multiple times. A user agent should may use these times to discover
        whether collection is currently occurring and on what schedule data
        collection occurs. A user agent may also be able to infer higher-level
        semantic labels for recurring times (e.g., if something occurs M-F from
        9am-5pm, then we can display this as business hours to the user).
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="time_segment" type="timeType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="timeType">
    <xs:annotation>
      <xs:documentation>
        Data collection can be periodic or at specific times. A daily_period
        occurs once each day, while a weekly_period occurs once each week.
        Multiple periods can be used for more complicated schedules (e.g.,
        workdays or during work hours). A non-regular schedule can be used with
        specific_times by enumerating dates.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="daily_period" type="dailyPeriodType" />
      <xs:element name="weekly_period" type="weeklyPeriodType" />
      <xs:element name="specific_times" type="specificTimesType" />
      <xs:element name="continuously" />
      <xs:element name="except" type="timeType" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="granularityType">
    <xs:annotation>
      <xs:documentation>
        This section describes the granularity by which data will be collected,
        used and measured.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="collection" type="granularityInstanceType" minOccurs="0" />
      <xs:element name="use" type="granularityInstanceType" minOccurs="0" />
      <xs:element name="data" type="granularityDataType" minOccurs="0" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="dailyPeriodType">
    <xs:all>
      <xs:element name="start" type="xs:time" />
      <xs:element name="duration" type="xs:duration" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="weeklyPeriodType">
    <xs:all>
      <xs:element name="day_of_week" type="dayOfWeekType" />
      <xs:element name="daily_period" type="dailyPeriodType" />
    </xs:all>
  </xs:complexType>
  <xs:simpleType name="dayOfWeekType">
    <xs:annotation>
      <xs:documentation>
        0 means Sunday, 6 means Saturday
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
      <xs:maxInclusive value="6" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="specificTimesType">
    <xs:all>
      <xs:element name="start" type="xs:dateTime" />
      <xs:element name="duration" type="xs:duration" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="granularityInstanceType">
    <xs:all>
      <xs:element name="level" type="granularityLevelType" />
      <xs:element name="description" type="xs:string" />
    </xs:all>
  </xs:complexType>

  <xs:simpleType name="granularityLevelType">
    <xs:annotation>
      <xs:documentation>
        Aggregate means that only aggregate statistics will be stored or
        collected. Pseudonymised means that data is not stored with Personally
        Identifiable Information, but may be stored with a static identifier
        that is not tied to Personally Identifiable Information, such as a
        unique ID. Anonymized means that data is not tied to Personally
        Identifiable Information or to other unique identifiers. Identifiable
        means that there are no guarantees on the granularity of collection or
        use.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="aggregate" />
      <xs:enumeration value="anonymized" />
      <xs:enumeration value="pseudonymized" />
      <xs:enumeration value="identifiable" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="granularityDataType">
    <xs:annotation>
      <xs:documentation>
        This data type describes the granularity of the data itself. For
        example, this field may be used to specify that video collection occurs
        at a granularity of 2 frames per second.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="value" type="xs:int" />
      <xs:element name="units" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="datatypeTypes">
    <xs:sequence>
      <xs:element name="datatype" type="datatypeType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="datatypeType">
    <xs:choice>
      <xs:element name="health" type="describedType" />
      <xs:element name="location_data" type="describedType" />
      <xs:element name="purchasing_info" type="describedType" />
      <xs:element name="ethnicity" type="describedType" />
      <xs:element name="income" type="describedType" />
      <xs:element name="friends" type="describedType" />
      <xs:element name="name" type="describedType" />
      <xs:element name="biometrics" type="describedType" />
      <xs:element name="video" type="describedType" />
      <xs:element name="audio" type="describedType" />
      <xs:element name="presence" type="describedType" />
      <xs:element name="photo" type="describedType" />
      <xs:element name="email_address" type="describedType" />
      <xs:element name="sentiment" type="describedType" />
      <xs:element name="OTHER" type="describedType" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="collectorType">
    <xs:choice>
      <xs:element name="smartphone" type="describedType" />
      <xs:element name="watch" type="describedType" />
      <xs:element name="car" type="describedType" />
      <xs:element name="camera" type="describedType" />
      <xs:element name="voice_recorder" type="describedType" />
      <xs:element name="fitness_monitor" type="describedType" />
      <xs:element name="thermostat" type="describedType" />
      <xs:element name="heat_sensor" type="describedType" />
      <xs:element name="pacemaker" type="describedType" />
      <xs:element name="edible_sensor" type="describedType" />
      <xs:element name="presence_sensor" type="describedType" />
      <xs:element name="wifi_location_tracker" type="describedType" />
      <xs:element name="OTHER" type="describedType" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="purposeType">
    <xs:choice>
      <xs:element name="surveillance" type="describedType" />
      <xs:element name="monitoring" type="describedType" />
      <xs:element name="providing_service" type="pserviceType" />
      <xs:element name="research" type="describedType" />
      <xs:element name="unspecified" type="describedType" />
      <xs:element name="any_purpose " type="describedType" />
      <xs:element name="OTHER" type="describedType" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="pserviceType">
    <xs:all>
      <xs:element name="description" type="xs:string" />
      <xs:element name="app_integration_id" type="xs:string" minOccurs="0" />
      <xs:element name="more_info" type="xs:anyURI" minOccurs="0" />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="sharedWithType">
    <xs:choice>
      <xs:element name="advertisers" type="describedType" />
      <xs:element name="government" type="describedType" />
      <xs:element name="friends" type="describedType" />
      <xs:element name="building_manager" type="describedType" />
      <xs:element name="public" type="describedType" />
      <xs:element name="company" type="describedType" />
      <xs:element name="service_provider" type="describedType" />
      <xs:element name="not_shared" type="describedType" />
      <xs:element name="OTHER" type="describedType" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="retentionType">
    <xs:choice>
      <xs:element name="duration" type="xs:duration" />
      <xs:element name="limited" type="describedType" />
      <xs:element name="unlimited" type="describedType" />
      <xs:element name="OTHER" type="describedType" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="controlOptionsActionsType">
    <xs:choice>
      <xs:element name="opt_out" type="describedType" />
      <xs:element name="opt_in" type="describedType" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="controlOptionsType">
    <xs:annotation>
      <xs:documentation>
        The response URL contains a URL where a user agent may send opt in or
        opt out actions. The user agent will communicate the ID in the ID
        field, the chosen action, and the identity of the user.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="response_url" type="xs:anyURI" />
      <xs:element name="id" type="xs:string" />
      <xs:element name="actions" type="controlOptionsActionsType" />
    </xs:all>
  </xs:complexType>
</xs:schema>
